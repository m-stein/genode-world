assert_spec x86

#
# Build
#

set build_components {
	core init
	app/chuck
	drivers/audio
	drivers/timer
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

lappend_if [have_spec ps2] build_components drivers/input/spec/ps2
lappend_if [have_spec sdl] build_components drivers/framebuffer/spec/sdl

build $build_components

create_boot_directory

exec cp [genode_dir]/repos/world/src/test/chuck/demo_keyboard.ck bin/test-chuck-demo_keyboard.ck

#
# Config
#

append config {
<config>
	<default caps="128"/>
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>}

append_platform_drv_config

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Input"/></provides>
		<config verbose_keyboard="no" verbose_mouse="no" verbose_scancodes="no"/>
		<route>
			<service name="ROM">      <parent/>    </service>
			<service name="CPU">      <parent/>    </service>
			<service name="PD">       <parent/>    </service>
			<service name="IO_PORT">  <parent/>    </service>
			<service name="LOG">      <parent/>    </service>
			<service name="Platform"> <any-child/> </service>
		</route>
	</start>
	<alias name="input_drv" child="ps2_drv"/>}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="Input"/> <service name="Framebuffer"/> </provides>
		<route>
			<service name="ROM">   <parent/> </service>
			<service name="CPU">   <parent/> </service>
			<service name="PD">    <parent/> </service>
			<service name="LOG">   <parent/> </service>
			<service name="Timer"> <child name="timer"/> </service>
		</route>
	</start>
	<alias name="input_drv" child="fb_sdl"/>}

append config {
	<start name="audio_drv">
		<binary name="} [audio_drv_binary] {"/>
		<resource name="RAM" quantum="8M"/>
		<provides> <service name="Audio_out"/> </provides>
		<config/>
	</start>
	<start name="chuck">
		<resource name="RAM" quantum="32M"/>
		<config dac_channels="2" adc_channels="0">
			<libc stdout="/log" stderr="/log"/>
			<vfs> <log/>
				<rom name="test-chuck-demo_keyboard.ck"/>
			</vfs>
			<file path="/test-chuck-demo_keyboard.ck"/>
		</config>
		<route>
			<any-service><parent/><any-child/></any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

append boot_modules {
	core init ld.lib.so
	timer
	chuck
	libogg.lib.so
	libFLAC.lib.so
	libsndfile.lib.so
	libvorbis.lib.so
	pthread.lib.so
	stdcxx.lib.so
	libc.lib.so
	libm.lib.so
	test-chuck-demo_keyboard.ck
} [audio_drv_binary] {
}

lappend_if [have_spec ps2] boot_modules ps2_drv
lappend_if [have_spec sdl] boot_modules fb_sdl

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args "  -nographic -soundhw es1370 "

run_genode_until forever
